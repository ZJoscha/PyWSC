# Documentation to used package and how to set up this file on: https://docs.python.org/3.6/library/configparser.html
# Loading and interpreting in Config.py

# **************************************************
# DO NOT CHANGE ANY NAMES OR SCRIPTS WILL FAIL!
# **************************************************
# Order of sections and options in sections can be customised.
# Just keep options in their default section or scripts will fail!
# If you change any section or option name: please adjust the corresponding
# getter method in Config.py!
#
# Feel free to delete or add any comments :D
# **************************************************
# QUICK GUIDE:
# **************************************************
# Values are addressed by [SECTION][ValueName].
#
# Commentlines are marked with '# '. Inline comments not (yet) defined...
# Commentlines will only be recognized as commentlines when '# ' is at beginning of line.
# Any '#' inline will be interpreted as part of the value, f.e. in OptionName = Value #
#
# Multiline values (f.e. for long Strings) can be intended.
# Same for multiline comments.
#
# BOOL VALUES:
# Use getboolean('SECTION','ValueName', fallback=True/False) to read these
# Valid bool values: True/False, true/false, on/off, 1/0
#
# MORE IN:
# Config.py -> docstring of config()
# Official ConfigParser documentation link: see Line 1
# **************************************************


[MOODLE]
Domain =
WebserviceAddress = webservice/rest/server.php
# Keep this token save, like your password to Moodle.
# Anyone with this token can use the scripts using this config file.
# Additional security settings in moodle may help.
# Like IP-Adress restrictions, time limits, ...
Token = 
# idnumber/email? TODO:HSMA
UserIdFieldName = username


[COURSE_CREATION]
# Get the course ID from moodle after you created the template course.
# You can easily read it from the URL in your browser.
TemplateCourseID = 
# The name of the new course.
CourseName = 
# The shortname of the new course. Must be unique! Moodle will complain otherwise.
CourseShortName = 
# The summary of the new course - gets displayed in course choosing view on Moodle page.
CourseDescription = 
# Category ID of 'Topic' course.
# 1 = 'Topic' in test system... TODO: HSMA
CourseCategoryID = 
# this is a boolean - but Moodle expects 1 or 0
Visible = 1


[GROUPS]
# Main groups
NumberOfMainGroups = 
# Teams - subgroups in main groups
MaxNumberOfSubGroups = 
MainGroupNaming = Übungsgruppe
SubGroupNaming = Team


[CURRENT_COURSE]
# The ID of the current course to manage. It will be written by CloneCourse.py
# This is the only value that is saved back into this config file!
CurrentCourseID = 


[OUTPUT_FILE]
# OS dependent dir path to save output files in.
OutputDirPath = 
# On default concatenation with CourseName in COURSE_CREATION section.
# Write a filename with file extension (should be *.xlsx) right behind '-' 
OutputFileNameGradings = ${COURSE_CREATION:CourseShortName}-
OutputFileNameStudent2Group = ${COURSE_CREATION:CourseShortName}-


[GRADING_SHEET]
# Absolute path to your grading sheet with filename and extension.
FilePath = 


[GRADING_SHEET_COLUMN_MAPPING]
# Configurations for your grading sheet.

# Upload marker is a needed row in your grading sheet,
# that is used to find grade columns of grades that need
# to be uploaded to Moodle.
# To mark a column in that row, use the assignment ID of
# the corresponding assignment for which the grade column is for.
# Grade comment columns are marked with [CommentMarkerPrefix][ASSIGNMENT_ID]
# For example: C:42
UploadMarkerRowName = Moodle_Marker
UploadMarkerColumn = A
CommentMarkerPrefix = C:

# Column where to find name of groups.
# Scripts need a group name in each row!
GroupNameColumn = 
# Column of Matrk.Nr of students.
StudentMatrNrColumn = 

# The two following columns are currently commented out (not used) 
# StudentFirstName = 
# StudentLastName = 

# If you want to make the upload marker ignore some entries, use
# this option. PyWSC expects a single entry or a list of entries!
# --> PLEASE NOTE THE ' ' AND [ ] !!! <--
# e.g.:
# Single entry:         'wiederholer'
# List of entries:      ['wiederholer', 'hat zulassung']
# No entry: This option will be ignored!
IgnoreGradingOnEntryOfValue =


[ENROLMENT]
# TODO HSMA
# ID for the 'Student' role in Moodle. Its used to filter users by role.
RoleIDStudent = 5
# If you are using enrolment passwords, you might need it here to make
# this client successfully enrol itself.
EnrolPassword = 
# TODO HSMA?
# ID of Enrolement method (default '0' on test system)
EnrolMethodId = 0


[BEHAVIOR]
# Here some booleans are set to configure script behaviors.

# Will open Excel after an output file was written.
OpenExcelAutomatically = true
# Will open Moodle website with proper link to safe some time for manually changes.
OpenMoodleWebsiteAutomatically = true
# Will make user to enter any key at end of scripts to avoid
# automatically closing of terminal. F.e. to read some logging...
WaitForUserPromptAtEndOfScripts = true
# If this is enabled heavy output will be generated to terminal on each HTTP Aktion.
# F.e. for debugging.
LogToConsole = true
# Automatically send commands to OVID
SendCommandsToOvid = true
# On actions on OVID - send general information email to AdministratorEmailAdress
SendOvidInformationEmail = true
# bool: If comments for grades are needed:
UseGradeComments = true

# On failed repair actions on OVID - send error email to AdministratorEmailAdress
# STRONGLY RECOMMENDED TO KEEP SendOvidErrorEmail ON True
SendOvidErrorEmail = true


[PYWSC]
# TODO: HSMA? username
# Name of the user assigned in Moodle for REST Webservices API.
# It is the Moodle user for this client.
# It is used f.e. to remove the client from lists when getting
# all enrolled users of a course.
Username = 


[OVID]
# Serveradress of Ovid
SSHHostName = 
# Registered User in Ovid (must have root-access).
SSHUserName = 
SSHPassword = 
# Path to git repositories.
GitDirPath = /var/www/git/
AdministratorEmailAdress = 


[EMAIL]
# Registered User in Email server.
UserName = 
Password = 
# Email Serveraddress
ServerAddress = 
DefaultEmailDomainStudents = @stud.hs-mannheim.de

